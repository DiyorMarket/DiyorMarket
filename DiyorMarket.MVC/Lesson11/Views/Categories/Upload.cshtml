@{
    ViewData["Title"] = "Upload";
    Layout = "~/Views/Shared/_DataGridLayout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard/index"><i class="fa fa-home" style="color: white"></i></a></li>
        <li class="breadcrumb-item"><a asp-controller="Categories" asp-action="Index">Categories List</a></li>
        <li class="breadcrumb-item active" aria-current="page">Upload</li>
    </ol>
</nav>


<div style="margin-top: 90px;">
    <h1>Upload categories</h1>
    <form asp-action="upload" method="post" enctype="multipart/form-data">
        <input class="form-control" type="file" id="formFile" name="file" accept=".xls, .xlsx" />
        <button class="btn btn-success " type="submit">
            Save Data
        </button>
    </form>

    <div>
        <ejs-grid id="categories-list"
                  dataSource="@ViewBag.Categories"
                  gridLines="Vertical"
                  toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })" load="load">
            <e-grid-editsettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Normal">
            </e-grid-editsettings>
            <e-grid-columns>
                <e-grid-column headerText="Name" field="Name" typeof="text" class="customer-name"></e-grid-column>
                <e-grid-column headerText="NumberOfProducts" field="Number Of Products" typeof="text" class="Number-of-products"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>

    <script>
        function load(args) {
            this.columns[0].validationRules = { required: true, minLength: [nameValidation, 'Name should be at least 3 letters'] };
        }

        function nameValidation(args) {
            return args['value'].length >= 3;
        };

        // TODO: Get custom error message using method
        // function getPhoneValidationError(args) {
        //     const phone = args['value'].toString();

        //     if (!phone.startsWith('+')) {
        //         return 'Phone number should start with: "+"';
        //     }

        //     if (phone.length > 13) {
        //         return "Phone number must have 13 numbers.";
        //     }

        //     return "";
        // }
    </script>

</div>
